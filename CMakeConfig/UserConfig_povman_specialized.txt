#------------------------------------------------------------------------------#
# Specialized UserConfig File by Povmaniaco, 03/13 
# Useful for specific projects for MSVC++ or GCC compilers
# Also is very useful to create project for each YafaRay experimental branch
#------------------------------------------------------------------------------#
# Copy this file as UserConfig.txt inside this directory to configure the
# options and paths for your build.
# Uncoment and set the values of the following lines to configure your build
# NOTE: the defaults work perfectly on most cases
# don't change anything unless you know what you're doing
#-------------------------------------------------------------------------------#
#            !! WARNING: DON'T TOUCH THE NEXT LINE !!
#-------------------------------------------------------------------------------#
set(YAF_USER_CONFIG ON)
#----------------------------# Build configuration #----------------------------#
#
# Build with POSIX threads (pthreads) wrapper instead of
# native threads wrapper on windows platforms
#-------------------------------------------------------------------------------#
# NOTE: This option is ignored on *nix platforms
#
# Default: OFF
#-------------------------------------------------------------------------------#
set(WITH_Pthreads OFF)
#-------------------------------------------------------------------------------#
# Build font rendering with FreeType
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_Freetype ON)
#-------------------------------------------------------------------------------#
# Build OpenEXR image I/O plugin
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_OpenEXR ON)
#-------------------------------------------------------------------------------#
# Build JPEG image I/O plugin
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_JPEG ON)
#-------------------------------------------------------------------------------#
# Build PNG image I/O plugin
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_PNG ON)
#-------------------------------------------------------------------------------#
# Build TIFF image I/O plugin
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_TIFF ON)
#-------------------------------------------------------------------------------#
# Enable XML Loader build
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_XML_LOADER ON)
#-------------------------------------------------------------------------------#
# Enable Qt Gui build
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_QT OFF)
#-------------------------------------------------------------------------------#
# Enable the YafaRay Python bindings
#
# Default: ON
#-------------------------------------------------------------------------------#
set(WITH_YAF_PY_BINDINGS ON)
#-------------------------------------------------------------------------------#
# Enable the YafaRay Ruby bindings
#
# Default: OFF
#-------------------------------------------------------------------------------#
set(WITH_YAF_RUBY_BINDINGS OFF)
#-------------------------------------------------------------------------------#
# Enable release mode building of YafaRay
# NOTE: This is only to build YafaRay releases, it controls the version number
# shown in yafaray-xml and the "draw parameters" parameters badge
#
# Default: OFF
#-------------------------------------------------------------------------------#
set(BUILDRELEASE ON)
#-------------------------------------------------------------------------------#
# Enable debug build mode
#
# Default: OFF
#-------------------------------------------------------------------------------#
set(DEBUG_BUILD OFF)
#-------------------------------------------------------------------------------#
# Embed font for QT GUI (useful for some buggy QT installations)
#
# Default: OFF
#-------------------------------------------------------------------------------#
set(EMBED_FONT_QT OFF)
#--------------------------# Path setting variables #---------------------------#
#
# The general install prefix
#
# Default:
#          "/usr/local"               on *NIX platforms
#          "C:\<Program_Files_Dir>"   on Windows platforms
#-------------------------------------------------------------------------------#
# !! My own personalized setup.!!
# Please. Edit the following lines to adapt them to their own configuration.
#-------------------------------------------------------------------------------#
SET(TOOLCHAIN "")
IF(MSVC)
	# set MSVC version
	SET(TOOLCHAIN "vc9")
	IF(NOT MSVC90)
		SET(TOOLCHAIN "vc10")
	ENDIF(NOT MSVC90)
ENDIF(MSVC)
# TODO: Create options for Ubuntu
IF(MINGW)
	SET(TOOLCHAIN "mingw")
ENDIF(MINGW)
# TODO:
set(USER_INSTALL_PREFIX "h:/yafmaster/${TOOLCHAIN}/binaries")

#-------------------------------------------------------------------------------#
# The executables instalation dir
#
# this will install the binary executables in ${USER_INSTALL_PREFIX}/bin
# NOTE: under windows platforms this is the installation path
# and YAF_LIB_DIR is ignored
#
# Default: bin
#-------------------------------------------------------------------------------#

#set(YAF_BIN_DIR bin)

#-------------------------------------------------------------------------------#
# The libraries instalation dir
#
# Default: lib
# this will install the libraries and plugins in ${USER_INSTALL_PREFIX}/lib
# NOTE: under windows platforms this variable is ignored
#-------------------------------------------------------------------------------#
set(YAF_LIB_DIR "${USER_INSTALL_PREFIX}/bin")
#-------------------------------------------------------------------------------#
# The plugin instalation dir
#
# Default:
#          ${YAF_LIB_DIR}/yafaray (on *NIX platforms)
#          ${YAF_LIB_DIR}/plugins (on Windows platforms)
#-------------------------------------------------------------------------------#
#set(YAF_PLUGIN_DIR "")
#-------------------------------------------------------------------------------#
# The Python Bindings Installation Path
#
# Default: ${CMAKE_SOURCE_DIR}/install/bindings/python
#
# this will install the Python bindings on ${CMAKE_SOURCE_DIR}/bindings/python
# you can set this path to your local blender scripts directory
# or whatever suits you best
#-------------------------------------------------------------------------------#
set(YAF_BINDINGS_PY_DIR ${YAF_LIB_DIR})
#-------------------------------------------------------------------------------#
# The Ruby Bindings Installation Path
#
# Default: ${CMAKE_SOURCE_DIR}/install/bindings/ruby
#
# this will install the Ruby bindings once
# ${CMAKE_SOURCE_DIR}/install/bindings/ruby
# you can set this path to whatever suits you best
#-------------------------------------------------------------------------------#

#set(YAF_BINDINGS_RUBY_DIR ${CMAKE_SOURCE_DIR}/install/bindings/ruby)

#-------------------------------------------------------------------------------#
# More than one path can be set separated by spaces ie.
#
#    set(YAF_USER_INCLUDE_DIRS C:/include D:/mydev/include)
#
#-------------------------------------------------------------------------------#
# !! My own personalized setup.!!
# Please. Edit the following lines to adapt them to their own configuration.
#-------------------------------------------------------------------------------#
IF(MSVC)
	set(MSDEV c:/YafarayLibs/msvc)
	IF(MSVC90)
		set(OPENEXR_INC "${MSDEV}/openexr/include")
		set(OPENEXR_LIB "${MSDEV}/libs/openlib90")
	ELSE(MSVC90)
		set(OPENEXR_INC "${MSDEV}/openinc10")
		set(OPENEXR_LIB "${MSDEV}/libs/openlib10")
	ENDIF(MSVC90)
	#
	set(YAF_USER_INCLUDE_DIRS 
			"${MSDEV}/zlib/include" 
			"${MSDEV}/libxml2/include" 
			"${MSDEV}/freetype/include" 
			"${MSDEV}/freetype/include/freetype" 
			"${MSDEV}/jpeg/include"
			"${OPENEXR_INC}"
			"${MSDEV}/python/include"
			"${MSDEV}/png/include"
			"${MSDEV}/tiff/include")
	# add libs
	set(YAF_USER_LIBRARY_DIRS ${MSDEV}/libs ${OPENEXR_LIB})
	# bin
	set(LIBXML2_XMLLINT_EXECUTABLE "${MSDEV}/libs/xmllint.exe")
	set(PKG_CONFIG_EXECUTABLE "${MSDEV}/libs/xmlcatalog.exe")# ??
	
ENDIF(MSVC)

IF(MINGW)
	# Set MinGW includes and libs
	set(GCCDEV c:/YafarayLibs/gcc)
	set(YAF_USER_INCLUDE_DIRS 
				"${GCCDEV}/include" 
				"${GCCDEV}/include/python3.3"
				"${GCCDEV}/include/libxml" 
				"${GCCDEV}/include/freetype")
	# add libs
	set(YAF_USER_LIBRARY_DIRS "${GCCDEV}/lib")
	# bin
	set(LIBXML2_XMLLINT_EXECUTABLE "${GCCDEV}/lib/xmllint.exe")
	set(PKG_CONFIG_EXECUTABLE "${GCCDEV}/lib/xmlcatalog.exe")
	
ENDIF(MINGW)

#-------------------------------------------------------------------------------#
# Set this variables if you wish to override the default optimization flags
#
# Defaults:
# On *nix platforms:
# set(USER_RELEASE_OPTIMIZATION_FLAGS "-O3 -ffast-math")
# set(USER_DEBUG_OPTIMIZATION_FLAGS "-ggdb")
# On windows platforms:
# set(USER_RELEASE_OPTIMIZATION_FLAGS "/Ot /Ox")
# set(USER_DEBUG_OPTIMIZATION_FLAGS "/Zi /GS /RTC1")
#
# IMPORTANT NOTE: USE QUOTATION MARKS ON THE FLAGS
#-------------------------------------------------------------------------------#
#set(USER_RELEASE_OPTIMIZATION_FLAGS "")
#set(USER_DEBUG_OPTIMIZATION_FLAGS "")
#-------------------------------------------------------------------------------#
# Set this variables if you wish to append extra compiler flags to your build
# this ones will be appended, won't override defaults
#
# IMPORTANT NOTE: USE QUOTATION MARKS ON THE FLAGS
#
#set(USER_RELEASE_EXTRA_FLAGS "")
#set(USER_DEBUG_EXTRA_FLAGS "")
#----------------------# Executable location variables #------------------------#
#
# Here you can set the paths to search for executables, you can leave blank
# the ones you don't need.
# 
# Path to qmake executable, need for QT gui intertace.
#-------------------------------------------------------------------------------#
#set(YAF_USER_QT_BIN_DIR "")
#-------------------------------------------------------------------------------#
# Path to swig executable, need for Python bindings
#-------------------------------------------------------------------------------#
set(YAF_USER_SWIG_BIN_DIR "c:/swigwin204")
#-------------------------# Extra linking variables #---------------------------#
#
# The variable YAF_USER_EXTRA_LIBS can be used to add extra linkage in case
# one of your dependencies has a dynamic link that is not included in the
# default YafaRay configuration, for example libXML2 can be dynamically
# linked against some libs like iconv and the default config doesn't include
# iconv as a linking lib, therefore you can use:
#
#    set(YAF_USER_EXTRA_LIBS -liconv)           *Syntax for GCC linker
#    or
#    set(YAF_USER_EXTRA_LIBS libiconv.lib)      *Syntax for MSVC linker
#
# to add iconv to the library linkage list, again you can specify several
# libs at once in a list separated by spaces ie.
#
#    set(YAF_USER_EXTRA_LIBS -lmylib1 -lmylib2 -lmylib2)
#    or
#    set(YAF_USER_EXTRA_LIBS libmylib1.lib libmylib2.lib libmylib2.lib)
#-------------------------------------------------------------------------------#
#set(YAF_USER_EXTRA_LIBS "")
#--------------------------# Extra defines variable #---------------------------#
# Use this variable to set extra defines that your build might require 																				
#-------------------------------------------------------------------------------#
IF(MINGW)
	set(YAF_USER_EXTRA_DEFS "-DOPENEXR_DLL")
ENDIF(MINGW)
#-------------------------------------------------------------------------------#
# Set Python version. Atm, Blender need a Python 3.3 version
# Use this variable to set the Python version you want to use for the bindings
# Default: 2.6
#-------------------------------------------------------------------------------#
set(YAF_PY_VERSION 3.3)
#-------------------------------------------------------------------------------#
# Misc. Configurations #
#
# Minimal ray distance
# Default: 0.00005
#-------------------------------------------------------------------------------#
set(YAF_MIN_RAY_DIST 0.00005)
#-------------------------------------------------------------------------------#
# Shadow bias
# Default: 0.0005
#-------------------------------------------------------------------------------#
set(YAF_SHADOW_BIAS 0.0005)
#----------------------------# Blender Add-On #---------------------------------#
# Options for building YafaRay as a self-contained add-on for Blender
# Default: OFF
#-------------------------------------------------------------------------------#

#set(BLENDER_ADDON ON)

#-------------------------------------------------------------------------------#
# Set the branch to use when building the add-on. If you use Blender v2.62
# uncomment the next line and change from "master" to "blender-2.62"
#-------------------------------------------------------------------------------#

#set(BLENDER_EXPORTER_BRANCH "master")

#----------------------------# Code Speed Up #----------------------------------#
# Options for building YafaRay with mathematical functions approximations.
# Default: ON
#-------------------------------------------------------------------------------#
set(FAST_MATH ON)
set(FAST_TRIG ON)
#-------------------------------------------------------------------------------#
# !!!  EXTRA OPTIONS FOR EXPERIMENTAL VERSIONS FROM GSOC 2010  !!!
# status: need review..
#-------------------------------------------------------------------------------#
set(WITH_TESTS OFF)
#-------------------------------------------------------------------------------#
# Build only test applications, not the rest of the core.
# This option need WITH_TESTS ON.
# status: need review
#-------------------------------------------------------------------------------#
set(TESTS_ONLY OFF)
#-------------------------------------------------------------------------------#
# Enable the use of OpenCL and GPU rendering where avaialble.
#-------------------------------------------------------------------------------#
set(WITH_OPENCL OFF)
#-------------------------------------------------------------------------------#
# Enable Irradiance Cache experimental integrators.
# This project its not allowed with MSVC++ compilers
#-------------------------------------------------------------------------------#
set(WITH_IRR_CACHE ON)
#-------------------------------------------------------------------------------#
#----------------------------- End of file -------------------------------------#						
#-------------------------------------------------------------------------------#

